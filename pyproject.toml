[project]
name = "snow-ipa"
version = "4.0.0"
description = "Google Earth Engine snow cover image export automation"
authors = [
    { "name" = "Erick Linares", "email" = "erick.linares@gmail.com" },
    { name = "Laboratorio TeleAmb UPLA" },
]
maintainers = []
readme = "README.md"
dependencies = []
requires-python = ">=3.11"
license = "GPL-3.0-only"
license-files = ["LICENSE"]
keywords = [
    "snow",
    "automation",
    "Google Earth Engine",
    "export",
    "image",
    "snow cover",
    "snow cover index",
    "cloud cover index",
    'SCI',
    'CCI',
    "MODIS",
]
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]

[project.urls]
homepage = "https://github.com/TeleAmb-upla/nieves_auto"
repository = "https://github.com/TeleAmb-upla/nieves_auto"

#[project.scripts]
#snow-ipa = "src.snow_ipa.main"

[tool.poetry]
packages = [{ include = "snow_ipa", from = "src" }]

[tool.poetry.dependencies]
python = "^3.11"
earthengine-api = "^1.5.0"
google-api-python-client = "^2.104.0"
pytz = "^2025.2"
email-validator = "^2.2.0"
jinja2 = "^3.1.6"
arrow = "^1.3.0"
prettytable = "^3.16.0"


[tool.poetry.group.dev.dependencies]
black = "^25.0.0"
jupyter = "^1.0.0"
pytest = "^8.0.0"
pytest-cov = "^6.0.0"
pytest-mock = "^3.14.0"
python-semantic-release = "^9.21.1"
myst-nb = "^1.2.0"
sphinx-rtd-theme = "^3.0.2"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
pythonpath = ["src"]
addopts = ["--import-mode=importlib"]
testpaths = ["tests"]

[tool.semantic_release]
version_toml = "pyproject.toml:project.version"
build_command_env = []
tag_format = "v{version}"

[tool.semantic_release.branches.main]
match = "(main|master)"
prerelease_token = "rc"
prerelease = false

[tool.semantic_release.changelog]
mode = "update"
insertion_flag = "<!-- version list -->"

[tool.semantic_release.changelog.default_templates]
changelog_file = "CHANGELOG.md"
mask_initial_release = false

[tool.semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "semantic-release <semantic-release>"

[tool.semantic_release.commit_parser_options]
parse_squash_commits = false
ignore_merge_commits = false

[tool.semantic_release.remote]
name = "origin"
type = "github"
ignore_token_for_push = true

[tool.semantic_release.publish]
upload_to_vcs_release = false
